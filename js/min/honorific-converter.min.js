!function(){"use strict";class t{constructor(){this.conversionRules=null,this.conversionHistory=[],this.maxHistoryItems=50,this.storageKey="honorificConverterHistory",this.init()}async init(){try{await this.loadConversionRules(),this.loadHistory(),this.setupUI(),this.attachEventListeners()}catch(t){console.error("Failed to initialize converter:",t)}}async loadConversionRules(){try{const t=await fetch("/data/honorific-conversion-rules.json"),e=await t.json();this.conversionRules=e}catch(t){console.error("Failed to load conversion rules:",t)}}loadHistory(){const t=localStorage.getItem(this.storageKey);t&&(this.conversionHistory=JSON.parse(t))}saveHistory(){localStorage.setItem(this.storageKey,JSON.stringify(this.conversionHistory))}addToHistory(t,e,n){const r={original:t,converted:e,type:n,timestamp:(new Date).toISOString()};this.conversionHistory.unshift(r),this.conversionHistory.length>this.maxHistoryItems&&(this.conversionHistory=this.conversionHistory.slice(0,this.maxHistoryItems)),this.saveHistory(),this.updateHistoryDisplay()}setupUI(){document.querySelectorAll(".honorific-converter-tool").forEach(t=>{t.innerHTML='\n                    <div class="converter-container">\n                        <div class="converter-header mb-6">\n                            <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4">敬語変換ツール</h3>\n                            <p class="text-gray-600 dark:text-gray-400">文章を入力すると、リアルタイムで敬語に変換します</p>\n                        </div>\n                        \n                        <div class="conversion-type-selector mb-4">\n                            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">\n                                変換タイプを選択\n                            </label>\n                            <div class="flex gap-2 flex-wrap">\n                                <button class="type-btn px-4 py-2 rounded-lg border-2 transition-all duration-200 text-sm" data-type="尊敬語">\n                                    尊敬語\n                                </button>\n                                <button class="type-btn px-4 py-2 rounded-lg border-2 transition-all duration-200 text-sm" data-type="謙譲語">\n                                    謙譲語\n                                </button>\n                                <button class="type-btn px-4 py-2 rounded-lg border-2 transition-all duration-200 text-sm active" data-type="丁寧語">\n                                    丁寧語\n                                </button>\n                                <button class="type-btn px-4 py-2 rounded-lg border-2 transition-all duration-200 text-sm" data-type="auto">\n                                    自動判定\n                                </button>\n                            </div>\n                        </div>\n                        \n                        <div class="converter-input-area mb-6">\n                            <div class="grid md:grid-cols-2 gap-4">\n                                <div>\n                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">\n                                        入力文章\n                                    </label>\n                                    <textarea \n                                        class="input-text w-full p-4 border-2 border-gray-300 dark:border-gray-600 rounded-lg focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200"\n                                        rows="6"\n                                        placeholder="ここに文章を入力してください..."\n                                    ></textarea>\n                                    <div class="mt-2 text-sm text-gray-500 dark:text-gray-400">\n                                        <span class="char-count">0</span> 文字\n                                    </div>\n                                </div>\n                                \n                                <div>\n                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">\n                                        変換結果\n                                    </label>\n                                    <div class="output-text w-full p-4 border-2 border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-900 min-h-[152px] text-gray-800 dark:text-gray-200">\n                                        <span class="text-gray-400 dark:text-gray-600">変換結果がここに表示されます</span>\n                                    </div>\n                                    <div class="mt-2 flex justify-between">\n                                        <button class="copy-btn text-sm text-blue-600 dark:text-blue-400 hover:underline disabled:opacity-50 disabled:cursor-not-allowed" disabled>\n                                            コピー\n                                        </button>\n                                        <button class="clear-btn text-sm text-red-600 dark:text-red-400 hover:underline">\n                                            クリア\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class="template-section mb-6">\n                            <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">よく使われる例文</h4>\n                            <div class="template-tabs mb-3">\n                                <button class="template-tab px-4 py-2 text-sm border-b-2 transition-colors duration-200 active" data-category="ビジネスメール">\n                                    ビジネスメール\n                                </button>\n                                <button class="template-tab px-4 py-2 text-sm border-b-2 transition-colors duration-200" data-category="電話応対">\n                                    電話応対\n                                </button>\n                                <button class="template-tab px-4 py-2 text-sm border-b-2 transition-colors duration-200" data-category="日常会話">\n                                    日常会話\n                                </button>\n                            </div>\n                            <div class="template-content grid grid-cols-1 md:grid-cols-2 gap-2">\n                                \x3c!-- テンプレートが動的に挿入されます --\x3e\n                            </div>\n                        </div>\n                        \n                        <div class="history-section">\n                            <div class="flex justify-between items-center mb-3">\n                                <h4 class="text-lg font-semibold text-gray-800 dark:text-gray-200">変換履歴</h4>\n                                <button class="clear-history-btn text-sm text-red-600 dark:text-red-400 hover:underline">\n                                    履歴をクリア\n                                </button>\n                            </div>\n                            <div class="history-list max-h-64 overflow-y-auto space-y-2">\n                                \x3c!-- 履歴が動的に挿入されます --\x3e\n                            </div>\n                        </div>\n                    </div>\n                ',this.updateTemplates("ビジネスメール"),this.updateHistoryDisplay()})}attachEventListeners(){document.addEventListener("input",t=>{t.target.matches(".input-text")&&this.handleInput(t.target)}),document.addEventListener("click",t=>{t.target.matches(".type-btn")?this.selectConversionType(t.target):t.target.matches(".copy-btn")?this.copyResult():t.target.matches(".clear-btn")?this.clearInput():t.target.matches(".template-tab")?this.selectTemplateCategory(t.target):t.target.matches(".template-btn")?this.applyTemplate(t.target):t.target.matches(".history-item")?this.applyHistoryItem(t.target):t.target.matches(".clear-history-btn")&&this.clearHistory()})}handleInput(t){const e=t.value;t.closest(".converter-input-area").querySelector(".char-count").textContent=e.length,e.trim()?this.convertText(e):this.clearOutput()}convertText(t){const e=document.querySelector(".type-btn.active").dataset.type;let n=t;n="auto"===e?this.autoConvert(t):this.convertByType(t,e),this.updateOutput(n),n!==t&&(document.querySelector(".copy-btn").disabled=!1)}convertByType(t,e){if(!this.conversionRules||!this.conversionRules.conversionRules[e])return t;let n=t;const r=this.conversionRules.conversionRules[e];return Object.entries(r).forEach(([t,e])=>{const r=e[0],a=new RegExp(t,"g");n=n.replace(a,r)}),this.conversionRules.commonPhrases&&Object.entries(this.conversionRules.commonPhrases).forEach(([t,e])=>{const r=e[0],a=new RegExp(t,"g");n=n.replace(a,r)}),n}autoConvert(t){let e=t;return e=this.convertByType(e,"丁寧語"),e}updateOutput(t){document.querySelector(".output-text").innerHTML=this.highlightChanges(t)}highlightChanges(t){return t.split("\n").map(t=>`<span>${this.escapeHtml(t)}</span>`).join("<br>")}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}clearOutput(){document.querySelector(".output-text").innerHTML='<span class="text-gray-400 dark:text-gray-600">変換結果がここに表示されます</span>',document.querySelector(".copy-btn").disabled=!0}selectConversionType(t){document.querySelectorAll(".type-btn").forEach(t=>{t.classList.remove("active","bg-blue-500","text-white","border-blue-500"),t.classList.add("border-gray-300","dark:border-gray-600")}),t.classList.add("active","bg-blue-500","text-white","border-blue-500"),t.classList.remove("border-gray-300","dark:border-gray-600");const e=document.querySelector(".input-text").value;e.trim()&&this.convertText(e)}copyResult(){const t=document.querySelector(".output-text").textContent;navigator.clipboard.writeText(t).then(()=>{const e=document.querySelector(".copy-btn"),n=e.textContent;e.textContent="コピーしました！",setTimeout(()=>{e.textContent=n},2e3);const r=document.querySelector(".input-text").value,a=document.querySelector(".type-btn.active").dataset.type;this.addToHistory(r,t,a)}).catch(t=>{console.error("Failed to copy:",t)})}clearInput(){document.querySelector(".input-text").value="",document.querySelector(".char-count").textContent="0",this.clearOutput()}selectTemplateCategory(t){document.querySelectorAll(".template-tab").forEach(t=>{t.classList.remove("active","border-blue-500","text-blue-600","dark:text-blue-400"),t.classList.add("border-transparent")}),t.classList.add("active","border-blue-500","text-blue-600","dark:text-blue-400"),t.classList.remove("border-transparent"),this.updateTemplates(t.dataset.category)}updateTemplates(t){const e=document.querySelector(".template-content");if(!this.conversionRules||!this.conversionRules.templates||!this.conversionRules.templates[t])return void(e.innerHTML='<p class="text-gray-500 dark:text-gray-400">テンプレートがありません</p>');const n=this.conversionRules.templates[t];let r="";Object.entries(n).forEach(([t,e])=>{Array.isArray(e)?e.forEach(e=>{r+=`\n                            <button class="template-btn text-left p-3 bg-gray-100 dark:bg-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200 text-sm"\n                                    data-text="${this.escapeHtml(e)}">\n                                <span class="block font-medium text-gray-700 dark:text-gray-300 mb-1">${t}</span>\n                                <span class="text-gray-600 dark:text-gray-400">${e}</span>\n                            </button>\n                        `}):Object.entries(e).forEach(([e,n])=>{n.forEach(n=>{r+=`\n                                <button class="template-btn text-left p-3 bg-gray-100 dark:bg-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200 text-sm"\n                                        data-text="${this.escapeHtml(n)}">\n                                    <span class="block font-medium text-gray-700 dark:text-gray-300 mb-1">${t} - ${e}</span>\n                                    <span class="text-gray-600 dark:text-gray-400">${n}</span>\n                                </button>\n                            `})})}),e.innerHTML=r}applyTemplate(t){const e=t.dataset.text,n=document.querySelector(".input-text");n.value&&!n.value.endsWith("\n")&&(n.value+="\n"),n.value+=e,this.handleInput(n),n.focus()}updateHistoryDisplay(){const t=document.querySelector(".history-list");if(0===this.conversionHistory.length)return void(t.innerHTML='<p class="text-gray-500 dark:text-gray-400 text-center py-4">履歴がありません</p>');const e=this.conversionHistory.map(t=>{const e=new Date(t.timestamp).toLocaleTimeString("ja-JP",{hour:"2-digit",minute:"2-digit"});return`\n                    <div class="history-item p-3 bg-gray-100 dark:bg-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200 cursor-pointer"\n                         data-original="${this.escapeHtml(t.original)}"\n                         data-converted="${this.escapeHtml(t.converted)}">\n                        <div class="flex justify-between items-start mb-1">\n                            <span class="text-xs text-gray-500 dark:text-gray-400">${e}</span>\n                            <span class="text-xs px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded">\n                                ${t.type}\n                            </span>\n                        </div>\n                        <div class="text-sm">\n                            <div class="text-gray-600 dark:text-gray-400 truncate">\n                                元: ${t.original}\n                            </div>\n                            <div class="text-gray-800 dark:text-gray-200 truncate">\n                                変換: ${t.converted}\n                            </div>\n                        </div>\n                    </div>\n                `}).join("");t.innerHTML=e}applyHistoryItem(t){const e=t.dataset.original,n=document.querySelector(".input-text");n.value=e,this.handleInput(n),n.focus()}clearHistory(){confirm("変換履歴をすべて削除しますか？")&&(this.conversionHistory=[],this.saveHistory(),this.updateHistoryDisplay())}}const e=document.createElement("style");e.textContent="\n        .type-btn.active {\n            background-color: rgb(59 130 246);\n            color: white;\n            border-color: rgb(59 130 246);\n        }\n        \n        .template-tab.active {\n            border-color: rgb(59 130 246);\n            color: rgb(59 130 246);\n        }\n        \n        .dark .template-tab.active {\n            color: rgb(96 165 250);\n        }\n        \n        .history-list::-webkit-scrollbar {\n            width: 6px;\n        }\n        \n        .history-list::-webkit-scrollbar-track {\n            background: transparent;\n        }\n        \n        .history-list::-webkit-scrollbar-thumb {\n            background: rgba(156, 163, 175, 0.5);\n            border-radius: 3px;\n        }\n        \n        .dark .history-list::-webkit-scrollbar-thumb {\n            background: rgba(75, 85, 99, 0.5);\n        }\n    ",document.head.appendChild(e),document.addEventListener("DOMContentLoaded",()=>{document.querySelector(".honorific-converter-tool")&&new t})}();