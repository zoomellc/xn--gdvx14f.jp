!function(){"use strict";const e={init(){this.setupTableScrollDetection(),this.observeTables()},setupTableScrollDetection(){document.querySelectorAll(".table-wrapper").forEach(e=>{const t=e.querySelector(".overflow-x-auto"),o=e.querySelector(".table-scroll-indicator"),l=e.querySelector(".table-scroll-hint");if(!t)return;const i=()=>{if(t.scrollWidth>t.clientWidth){const i=t.scrollLeft,s=t.scrollWidth-t.clientWidth;o&&(o.style.opacity=i<s-5?"1":"0"),l&&!e.dataset.hintShown&&(l.style.opacity="1",e.dataset.hintShown="true",setTimeout(()=>{l.style.opacity="0"},3e3))}else o&&(o.style.opacity="0"),l&&(l.style.opacity="0")};i(),t.addEventListener("scroll",i),window.addEventListener("resize",i),"ontouchstart"in window&&(t.style.webkitOverflowScrolling="touch",t.style.scrollBehavior="smooth")})},observeTables(){new MutationObserver(e=>{e.forEach(e=>{e.addedNodes.forEach(e=>{1===e.nodeType&&e.classList?.contains("table-wrapper")&&this.setupTableScrollDetection()})})}).observe(document.body,{childList:!0,subtree:!0})}};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>e.init()):e.init(),window.TableResponsive=e}();