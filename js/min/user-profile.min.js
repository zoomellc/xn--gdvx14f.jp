!function(){"use strict";class n{constructor(){this.userData=this.loadUserData(),this.learningData=this.loadLearningData(),this.commentsData=this.loadCommentsData(),this.favoritesData=this.loadFavoritesData(),this.isModalOpen=!1,this.init()}loadUserData(){const n=localStorage.getItem("keigo-jp-user");if(n)try{return JSON.parse(n)}catch(n){return this.createNewUser()}return this.createNewUser()}createNewUser(){const n={id:this.generateId(),name:"",email:"",avatar:this.generateAvatar(),joinDate:(new Date).toISOString(),level:"beginner",points:0,achievements:[],settings:{emailNotifications:!1,displayName:!0,publicProfile:!1}};return this.saveUserData(n),n}generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}generateAvatar(){const n=["#667eea","#764ba2","#f093fb","#4facfe","#fa709a","#fed330"];return n[Math.floor(Math.random()*n.length)]}saveUserData(n){localStorage.setItem("keigo-jp-user",JSON.stringify(n)),this.userData=n}loadLearningData(){const n=localStorage.getItem("keigo-jp-learning-progress");if(n)try{return JSON.parse(n)}catch(n){return{}}return{}}loadCommentsData(){const n=localStorage.getItem("keigo-jp-comments");if(n)try{const e=JSON.parse(n),t=[];return Object.entries(e).forEach(([n,e])=>{e.forEach(e=>{e.userId===this.userData.id&&t.push({...e,articleId:n})})}),t}catch(n){return[]}return[]}loadFavoritesData(){const n=localStorage.getItem("keigo-jp-favorites");if(n)try{return JSON.parse(n)}catch(n){return[]}return[]}async init(){this.injectStyles(),this.createProfileButton(),this.createProfileModal(),this.attachEventListeners()}injectStyles(){const n=document.createElement("style");n.textContent="\n                .profile-button {\n                    position: fixed;\n                    top: 80px;\n                    right: 20px;\n                    background: var(--bg-color, white);\n                    border: 2px solid #667eea;\n                    color: #667eea;\n                    width: 48px;\n                    height: 48px;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    cursor: pointer;\n                    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n                    transition: all 0.3s ease;\n                    z-index: 999;\n                    font-weight: bold;\n                    font-size: 18px;\n                }\n                \n                .profile-button:hover {\n                    background: #667eea;\n                    color: white;\n                    transform: scale(1.1);\n                }\n                \n                .profile-modal {\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                    background: rgba(0, 0, 0, 0.5);\n                    display: none;\n                    z-index: 1000;\n                    padding: 20px;\n                    overflow-y: auto;\n                    backdrop-filter: blur(5px);\n                }\n                \n                .profile-modal.show {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n                \n                .profile-content {\n                    background: var(--bg-color, white);\n                    max-width: 800px;\n                    width: 100%;\n                    max-height: 90vh;\n                    border-radius: 16px;\n                    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n                    display: flex;\n                    overflow: hidden;\n                    animation: slideUp 0.3s ease;\n                }\n                \n                @keyframes slideUp {\n                    from {\n                        transform: translateY(30px);\n                        opacity: 0;\n                    }\n                    to {\n                        transform: translateY(0);\n                        opacity: 1;\n                    }\n                }\n                \n                .profile-sidebar {\n                    width: 250px;\n                    background: #f8f9fa;\n                    padding: 30px 20px;\n                    border-right: 1px solid #e0e0e0;\n                }\n                \n                .profile-main {\n                    flex: 1;\n                    padding: 30px;\n                    overflow-y: auto;\n                }\n                \n                .profile-header {\n                    text-align: center;\n                    margin-bottom: 30px;\n                }\n                \n                .profile-avatar {\n                    width: 80px;\n                    height: 80px;\n                    border-radius: 50%;\n                    margin: 0 auto 15px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    color: white;\n                    font-size: 36px;\n                    font-weight: bold;\n                }\n                \n                .profile-name {\n                    font-size: 20px;\n                    font-weight: bold;\n                    color: var(--text-color, #333);\n                    margin-bottom: 5px;\n                }\n                \n                .profile-level {\n                    font-size: 14px;\n                    color: var(--text-color-secondary, #666);\n                    margin-bottom: 10px;\n                }\n                \n                .profile-points {\n                    background: #667eea;\n                    color: white;\n                    padding: 4px 12px;\n                    border-radius: 20px;\n                    font-size: 12px;\n                    display: inline-block;\n                }\n                \n                .profile-nav {\n                    margin-top: 30px;\n                }\n                \n                .profile-nav-item {\n                    display: block;\n                    width: 100%;\n                    padding: 12px 20px;\n                    margin-bottom: 5px;\n                    border: none;\n                    background: transparent;\n                    text-align: left;\n                    cursor: pointer;\n                    color: var(--text-color, #333);\n                    border-radius: 8px;\n                    transition: all 0.2s;\n                }\n                \n                .profile-nav-item:hover {\n                    background: rgba(102, 126, 234, 0.1);\n                    color: #667eea;\n                }\n                \n                .profile-nav-item.active {\n                    background: #667eea;\n                    color: white;\n                }\n                \n                .profile-close {\n                    position: absolute;\n                    top: 20px;\n                    right: 20px;\n                    background: none;\n                    border: none;\n                    font-size: 28px;\n                    cursor: pointer;\n                    color: var(--text-color-secondary, #999);\n                    width: 36px;\n                    height: 36px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    border-radius: 50%;\n                    transition: all 0.2s;\n                }\n                \n                .profile-close:hover {\n                    background: rgba(0, 0, 0, 0.05);\n                    color: var(--text-color, #333);\n                }\n                \n                .profile-section {\n                    display: none;\n                }\n                \n                .profile-section.active {\n                    display: block;\n                }\n                \n                .profile-section-title {\n                    font-size: 24px;\n                    font-weight: bold;\n                    color: var(--text-color, #333);\n                    margin-bottom: 20px;\n                }\n                \n                .profile-form {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 15px;\n                }\n                \n                .profile-form-group {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 5px;\n                }\n                \n                .profile-label {\n                    font-size: 14px;\n                    font-weight: 500;\n                    color: var(--text-color, #333);\n                }\n                \n                .profile-input {\n                    padding: 10px 12px;\n                    border: 1px solid #e0e0e0;\n                    border-radius: 6px;\n                    font-size: 14px;\n                    transition: border-color 0.2s;\n                    background: var(--bg-color, white);\n                    color: var(--text-color, #333);\n                }\n                \n                .profile-input:focus {\n                    outline: none;\n                    border-color: #667eea;\n                }\n                \n                .profile-save-btn {\n                    background: #667eea;\n                    color: white;\n                    border: none;\n                    padding: 10px 20px;\n                    border-radius: 6px;\n                    font-size: 14px;\n                    font-weight: 500;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                    align-self: flex-start;\n                }\n                \n                .profile-save-btn:hover {\n                    background: #5a67d8;\n                    transform: translateY(-1px);\n                }\n                \n                .profile-stats {\n                    display: grid;\n                    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n                    gap: 15px;\n                    margin-bottom: 30px;\n                }\n                \n                .profile-stat {\n                    background: #f8f9fa;\n                    padding: 20px;\n                    border-radius: 8px;\n                    text-align: center;\n                }\n                \n                .profile-stat-value {\n                    font-size: 28px;\n                    font-weight: bold;\n                    color: #667eea;\n                    margin-bottom: 5px;\n                }\n                \n                .profile-stat-label {\n                    font-size: 14px;\n                    color: var(--text-color-secondary, #666);\n                }\n                \n                .profile-list {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 15px;\n                }\n                \n                .profile-list-item {\n                    background: #f8f9fa;\n                    padding: 15px;\n                    border-radius: 8px;\n                    border: 1px solid #e0e0e0;\n                    transition: all 0.2s;\n                }\n                \n                .profile-list-item:hover {\n                    border-color: #667eea;\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n                }\n                \n                .profile-achievement {\n                    display: flex;\n                    align-items: center;\n                    gap: 15px;\n                }\n                \n                .profile-achievement-icon {\n                    width: 48px;\n                    height: 48px;\n                    background: #667eea;\n                    color: white;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    font-size: 24px;\n                }\n                \n                .profile-achievement-info h4 {\n                    font-weight: 500;\n                    color: var(--text-color, #333);\n                    margin-bottom: 4px;\n                }\n                \n                .profile-achievement-info p {\n                    font-size: 12px;\n                    color: var(--text-color-secondary, #666);\n                }\n                \n                .profile-empty {\n                    text-align: center;\n                    padding: 40px;\n                    color: var(--text-color-secondary, #666);\n                }\n                \n                @media (max-width: 768px) {\n                    .profile-content {\n                        flex-direction: column;\n                        max-height: 100vh;\n                    }\n                    \n                    .profile-sidebar {\n                        width: 100%;\n                        border-right: none;\n                        border-bottom: 1px solid #e0e0e0;\n                        padding: 20px;\n                    }\n                    \n                    .profile-nav {\n                        display: flex;\n                        overflow-x: auto;\n                        margin-top: 20px;\n                        gap: 10px;\n                    }\n                    \n                    .profile-nav-item {\n                        white-space: nowrap;\n                        flex-shrink: 0;\n                    }\n                    \n                    .profile-main {\n                        padding: 20px;\n                    }\n                    \n                    .profile-button {\n                        top: auto;\n                        bottom: 140px;\n                    }\n                }\n                \n                @media (prefers-color-scheme: dark) {\n                    .profile-sidebar {\n                        background: #2a2a2a;\n                        border-color: #444;\n                    }\n                    \n                    .profile-content {\n                        background: #1e1e1e;\n                    }\n                    \n                    .profile-stat,\n                    .profile-list-item {\n                        background: #2a2a2a;\n                        border-color: #444;\n                    }\n                    \n                    .profile-input {\n                        background: #333;\n                        border-color: #555;\n                        color: #e0e0e0;\n                    }\n                }\n            ",document.head.appendChild(n)}createProfileButton(){const n=document.createElement("button");n.className="profile-button",n.innerHTML=this.userData.name?this.userData.name.charAt(0).toUpperCase():"P",n.style.background=this.userData.avatar,n.style.color="white",n.style.border="none",n.title="プロフィール",n.addEventListener("click",()=>this.openModal()),document.body.appendChild(n),this.profileButton=n}createProfileModal(){const n=document.createElement("div");n.className="profile-modal",n.innerHTML=`\n                <div class="profile-content">\n                    <div class="profile-sidebar">\n                        <div class="profile-header">\n                            <div class="profile-avatar" style="background: ${this.userData.avatar}">\n                                ${this.userData.name?this.userData.name.charAt(0).toUpperCase():"U"}\n                            </div>\n                            <div class="profile-name">${this.userData.name||"未設定"}</div>\n                            <div class="profile-level">\n                                ${this.getLevelDisplay(this.userData.level)}\n                            </div>\n                            <div class="profile-points">${this.userData.points} ポイント</div>\n                        </div>\n                        \n                        <nav class="profile-nav">\n                            <button class="profile-nav-item active" data-section="overview">\n                                概要\n                            </button>\n                            <button class="profile-nav-item" data-section="profile">\n                                プロフィール編集\n                            </button>\n                            <button class="profile-nav-item" data-section="learning">\n                                学習進捗\n                            </button>\n                            <button class="profile-nav-item" data-section="comments">\n                                コメント履歴\n                            </button>\n                            <button class="profile-nav-item" data-section="favorites">\n                                お気に入り\n                            </button>\n                            <button class="profile-nav-item" data-section="achievements">\n                                実績\n                            </button>\n                        </nav>\n                    </div>\n                    \n                    <div class="profile-main">\n                        <button class="profile-close">&times;</button>\n                        \n                        ${this.createOverviewSection()}\n                        ${this.createProfileSection()}\n                        ${this.createLearningSection()}\n                        ${this.createCommentsSection()}\n                        ${this.createFavoritesSection()}\n                        ${this.createAchievementsSection()}\n                    </div>\n                </div>\n            `,document.body.appendChild(n),this.modal=n}createOverviewSection(){const n=new Date(this.userData.joinDate);return`\n                <div class="profile-section active" data-section="overview">\n                    <h2 class="profile-section-title">概要</h2>\n                    \n                    <div class="profile-stats">\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${Math.floor((new Date-n)/864e5)}</div>\n                            <div class="profile-stat-label">日間利用</div>\n                        </div>\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${this.commentsData.length}</div>\n                            <div class="profile-stat-label">コメント</div>\n                        </div>\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${this.favoritesData.length}</div>\n                            <div class="profile-stat-label">お気に入り</div>\n                        </div>\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${this.userData.achievements.length}</div>\n                            <div class="profile-stat-label">実績</div>\n                        </div>\n                    </div>\n                    \n                    <h3 style="font-size: 18px; font-weight: 500; margin-bottom: 15px;">最近のアクティビティ</h3>\n                    <div class="profile-list">\n                        ${this.getRecentActivity()}\n                    </div>\n                </div>\n            `}createProfileSection(){return`\n                <div class="profile-section" data-section="profile">\n                    <h2 class="profile-section-title">プロフィール編集</h2>\n                    \n                    <form class="profile-form" id="profile-form">\n                        <div class="profile-form-group">\n                            <label class="profile-label">表示名</label>\n                            <input type="text" class="profile-input" id="profile-name" \n                                   value="${this.userData.name}" placeholder="表示名を入力">\n                        </div>\n                        \n                        <div class="profile-form-group">\n                            <label class="profile-label">メールアドレス</label>\n                            <input type="email" class="profile-input" id="profile-email" \n                                   value="${this.userData.email}" placeholder="メールアドレスを入力">\n                        </div>\n                        \n                        <div class="profile-form-group">\n                            <label class="profile-label">アバターカラー</label>\n                            <div style="display: flex; gap: 10px; flex-wrap: wrap;">\n                                ${["#667eea","#764ba2","#f093fb","#4facfe","#fa709a","#fed330"].map(n=>`\n                                    <button type="button" class="avatar-color" \n                                            style="width: 40px; height: 40px; border-radius: 50%; \n                                                   background: ${n}; border: 2px solid ${n===this.userData.avatar?"#333":"transparent"}; \n                                                   cursor: pointer;" \n                                            data-color="${n}"></button>\n                                `).join("")}\n                            </div>\n                        </div>\n                        \n                        <button type="submit" class="profile-save-btn">保存</button>\n                    </form>\n                </div>\n            `}createLearningSection(){return`\n                <div class="profile-section" data-section="learning">\n                    <h2 class="profile-section-title">学習進捗</h2>\n                    \n                    <div class="profile-stats">\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${Object.keys(this.learningData).length}</div>\n                            <div class="profile-stat-label">完了レッスン</div>\n                        </div>\n                        <div class="profile-stat">\n                            <div class="profile-stat-value">${this.calculateQuizScore()}%</div>\n                            <div class="profile-stat-label">クイズ正答率</div>\n                        </div>\n                    </div>\n                    \n                    <div class="profile-list">\n                        ${this.getLearningHistory()}\n                    </div>\n                </div>\n            `}createCommentsSection(){return`\n                <div class="profile-section" data-section="comments">\n                    <h2 class="profile-section-title">コメント履歴</h2>\n                    \n                    ${this.commentsData.length>0?`\n                        <div class="profile-list">\n                            ${this.commentsData.slice(0,10).map(n=>`\n                                <div class="profile-list-item">\n                                    <div style="margin-bottom: 8px;">\n                                        <strong>${this.escapeHtml(n.content.substring(0,100))}${n.content.length>100?"...":""}</strong>\n                                    </div>\n                                    <div style="font-size: 12px; color: var(--text-color-secondary, #666);">\n                                        ${this.formatDate(new Date(n.timestamp))} • ${n.likes} いいね\n                                    </div>\n                                </div>\n                            `).join("")}\n                        </div>\n                    `:'\n                        <div class="profile-empty">\n                            まだコメントがありません\n                        </div>\n                    '}\n                </div>\n            `}createFavoritesSection(){return`\n                <div class="profile-section" data-section="favorites">\n                    <h2 class="profile-section-title">お気に入り記事</h2>\n                    \n                    ${this.favoritesData.length>0?`\n                        <div class="profile-list">\n                            ${this.favoritesData.map(n=>`\n                                <div class="profile-list-item">\n                                    <a href="${n.url}" style="text-decoration: none; color: inherit;">\n                                        <h4 style="margin-bottom: 8px; color: var(--text-color, #333);">\n                                            ${this.escapeHtml(n.title)}\n                                        </h4>\n                                        <p style="font-size: 14px; color: var(--text-color-secondary, #666); margin-bottom: 8px;">\n                                            ${this.escapeHtml(n.description||"")}\n                                        </p>\n                                        <div style="font-size: 12px; color: var(--text-color-secondary, #666);">\n                                            ${this.formatDate(new Date(n.savedAt))}に保存\n                                        </div>\n                                    </a>\n                                </div>\n                            `).join("")}\n                        </div>\n                    `:'\n                        <div class="profile-empty">\n                            まだお気に入り記事がありません\n                        </div>\n                    '}\n                </div>\n            `}createAchievementsSection(){const n=this.getAchievements();return`\n                <div class="profile-section" data-section="achievements">\n                    <h2 class="profile-section-title">実績</h2>\n                    \n                    ${n.length>0?`\n                        <div class="profile-list">\n                            ${n.map(n=>`\n                                <div class="profile-list-item">\n                                    <div class="profile-achievement">\n                                        <div class="profile-achievement-icon">\n                                            ${n.icon}\n                                        </div>\n                                        <div class="profile-achievement-info">\n                                            <h4>${n.title}</h4>\n                                            <p>${n.description}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            `).join("")}\n                        </div>\n                    `:'\n                        <div class="profile-empty">\n                            まだ実績がありません\n                        </div>\n                    '}\n                </div>\n            `}attachEventListeners(){this.modal.querySelector(".profile-close").addEventListener("click",()=>{this.closeModal()}),this.modal.addEventListener("click",n=>{n.target===this.modal&&this.closeModal()});const n=this.modal.querySelectorAll(".profile-nav-item"),e=this.modal.querySelectorAll(".profile-section");n.forEach(t=>{t.addEventListener("click",()=>{const i=t.dataset.section;n.forEach(n=>n.classList.remove("active")),e.forEach(n=>n.classList.remove("active")),t.classList.add("active"),this.modal.querySelector(`[data-section="${i}"]`).classList.add("active")})});const t=this.modal.querySelector("#profile-form");if(t){t.addEventListener("submit",n=>{n.preventDefault(),this.saveProfile()});const n=t.querySelectorAll(".avatar-color");n.forEach(e=>{e.addEventListener("click",()=>{n.forEach(n=>n.style.border="2px solid transparent"),e.style.border="2px solid #333",this.userData.avatar=e.dataset.color})})}document.addEventListener("keydown",n=>{"Escape"===n.key&&this.isModalOpen&&this.closeModal()})}openModal(){this.modal.classList.add("show"),this.isModalOpen=!0,document.body.style.overflow="hidden",this.updateModalContent()}closeModal(){this.modal.classList.remove("show"),this.isModalOpen=!1,document.body.style.overflow=""}updateModalContent(){this.commentsData=this.loadCommentsData(),this.favoritesData=this.loadFavoritesData(),this.learningData=this.loadLearningData();const n=this.modal.querySelectorAll(".profile-stat-value");n.length>=2&&(n[1].textContent=this.commentsData.length,n[2].textContent=this.favoritesData.length)}saveProfile(){const n=this.modal.querySelector("#profile-name"),e=this.modal.querySelector("#profile-email");this.userData.name=n.value.trim(),this.userData.email=e.value.trim(),this.saveUserData(this.userData),this.profileButton.innerHTML=this.userData.name?this.userData.name.charAt(0).toUpperCase():"P",this.profileButton.style.background=this.userData.avatar;const t=this.modal.querySelector(".profile-avatar");t.style.background=this.userData.avatar,t.innerHTML=this.userData.name?this.userData.name.charAt(0).toUpperCase():"U",this.modal.querySelector(".profile-name").textContent=this.userData.name||"未設定";const i=this.modal.querySelector(".profile-save-btn"),a=i.textContent;i.textContent="保存しました！",i.style.background="#10b981",setTimeout(()=>{i.textContent=a,i.style.background="#667eea"},2e3)}getLevelDisplay(n){return{beginner:"初級者",intermediate:"中級者",advanced:"上級者",expert:"エキスパート"}[n]||"初級者"}getRecentActivity(){const n=[];if(this.commentsData.length>0){const e=this.commentsData[0];n.push({type:"comment",content:`「${e.content.substring(0,50)}...」にコメント`,date:new Date(e.timestamp)})}if(this.favoritesData.length>0){const e=this.favoritesData[0];n.push({type:"favorite",content:`「${e.title}」をお気に入りに追加`,date:new Date(e.savedAt)})}return n.sort((n,e)=>e.date-n.date),0===n.length?'<div class="profile-empty">まだアクティビティがありません</div>':n.slice(0,5).map(n=>`\n                <div class="profile-list-item">\n                    <div style="font-size: 14px; margin-bottom: 4px;">${this.escapeHtml(n.content)}</div>\n                    <div style="font-size: 12px; color: var(--text-color-secondary, #666);">\n                        ${this.formatDate(n.date)}\n                    </div>\n                </div>\n            `).join("")}calculateQuizScore(){if(!this.learningData.quizResults)return 0;const n=this.learningData.quizResults,e=n.reduce((n,e)=>n+e.total,0),t=n.reduce((n,e)=>n+e.correct,0);return e>0?Math.round(t/e*100):0}getLearningHistory(){return 0===Object.keys(this.learningData).length?'<div class="profile-empty">まだ学習履歴がありません</div>':'<div class="profile-empty">学習履歴の詳細は準備中です</div>'}getAchievements(){const n=[];this.commentsData.length>=1&&n.push({icon:"💬",title:"初めてのコメント",description:"最初のコメントを投稿しました"}),this.commentsData.length>=10&&n.push({icon:"🗣️",title:"アクティブコメンター",description:"10件以上のコメントを投稿しました"}),this.favoritesData.length>=5&&n.push({icon:"⭐",title:"お気に入りコレクター",description:"5件以上の記事をお気に入りに追加しました"});const e=new Date(this.userData.joinDate),t=Math.floor((new Date-e)/864e5);return t>=7&&n.push({icon:"📅",title:"1週間継続",description:"7日間サイトを利用しました"}),t>=30&&n.push({icon:"🏆",title:"1ヶ月継続",description:"30日間サイトを利用しました"}),n}formatDate(n){const e=new Date-n,t=Math.floor(e/6e4),i=Math.floor(e/36e5),a=Math.floor(e/864e5);return t<1?"たった今":t<60?`${t}分前`:i<24?`${i}時間前`:a<7?`${a}日前`:n.toLocaleDateString("ja-JP",{year:"numeric",month:"long",day:"numeric"})}escapeHtml(n){const e=document.createElement("div");return e.textContent=n,e.innerHTML}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new n}):new n}();