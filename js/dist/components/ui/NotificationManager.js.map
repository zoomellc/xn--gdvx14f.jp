{"version":3,"file":"NotificationManager.js","sourceRoot":"","sources":["../../../src/components/ui/NotificationManager.ts"],"names":[],"mappings":"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","sourcesContent":["export type NotificationType = 'success' | 'error' | 'warning' | 'info';\n\nexport interface NotificationOptions {\n  duration?: number;\n  position?: 'top' | 'bottom' | 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';\n  persistent?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport class NotificationManager {\n  private container: HTMLElement | null = null;\n  private notifications: Map<string, HTMLElement> = new Map();\n  private defaultOptions: NotificationOptions = {\n    duration: 3000,\n    position: 'top',\n    persistent: false\n  };\n\n  constructor(options: Partial<NotificationOptions> = {}) {\n    this.defaultOptions = { ...this.defaultOptions, ...options };\n    this.init();\n  }\n\n  private init(): void {\n    if (typeof document === 'undefined') return;\n\n    this.container = document.getElementById('notification-container');\n    if (!this.container) {\n      this.container = document.createElement('div');\n      this.container.id = 'notification-container';\n      this.container.className = 'notification-container';\n      this.applyContainerStyles();\n      document.body.appendChild(this.container);\n    }\n  }\n\n  private applyContainerStyles(): void {\n    if (!this.container) return;\n    \n    const position = this.defaultOptions.position || 'top';\n    const styles: Record<string, string> = {\n      position: 'fixed',\n      zIndex: '9999',\n      pointerEvents: 'none',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      padding: '20px'\n    };\n\n    switch (position) {\n      case 'top':\n        styles.top = '0';\n        styles.left = '50%';\n        styles.transform = 'translateX(-50%)';\n        break;\n      case 'bottom':\n        styles.bottom = '0';\n        styles.left = '50%';\n        styles.transform = 'translateX(-50%)';\n        break;\n      case 'top-right':\n        styles.top = '0';\n        styles.right = '0';\n        break;\n      case 'top-left':\n        styles.top = '0';\n        styles.left = '0';\n        break;\n      case 'bottom-right':\n        styles.bottom = '0';\n        styles.right = '0';\n        break;\n      case 'bottom-left':\n        styles.bottom = '0';\n        styles.left = '0';\n        break;\n    }\n\n    Object.assign(this.container.style, styles);\n  }\n\n  show(\n    message: string,\n    type: NotificationType = 'info',\n    options: NotificationOptions = {}\n  ): string {\n    const mergedOptions = { ...this.defaultOptions, ...options };\n    const id = `notification-${Date.now()}`;\n    \n    const notification = this.createNotification(id, message, type, mergedOptions);\n    \n    if (!this.container) {\n      this.init();\n    }\n    \n    if (this.container) {\n      this.container.appendChild(notification);\n      this.notifications.set(id, notification);\n\n      requestAnimationFrame(() => {\n        notification.classList.add('notification-show');\n      });\n\n      if (!mergedOptions.persistent) {\n        setTimeout(() => {\n          this.hide(id);\n        }, mergedOptions.duration);\n      }\n    }\n\n    return id;\n  }\n\n  private createNotification(\n    id: string,\n    message: string,\n    type: NotificationType,\n    options: NotificationOptions\n  ): HTMLElement {\n    const notification = document.createElement('div');\n    notification.id = id;\n    notification.className = `notification notification-${type} ${options.className || ''}`;\n    \n    const styles: Record<string, string> = {\n      padding: '12px 20px',\n      borderRadius: '4px',\n      backgroundColor: this.getBackgroundColor(type),\n      color: '#fff',\n      fontSize: '14px',\n      lineHeight: '1.5',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      pointerEvents: 'auto',\n      cursor: options.onClick ? 'pointer' : 'default',\n      opacity: '0',\n      transform: 'translateY(-20px)',\n      transition: 'all 0.3s ease',\n      maxWidth: '400px',\n      wordWrap: 'break-word'\n    };\n\n    Object.assign(notification.style, styles);\n\n    notification.innerHTML = `\n      <div style=\"display: flex; align-items: center; gap: 10px;\">\n        <span style=\"flex: 1;\">${message}</span>\n        ${options.persistent ? '<button class=\"notification-close\" style=\"background: none; border: none; color: #fff; cursor: pointer; font-size: 16px; padding: 0; margin-left: 10px;\">&times;</button>' : ''}\n      </div>\n    `;\n\n    if (options.onClick) {\n      notification.addEventListener('click', (e) => {\n        if (!(e.target as HTMLElement).classList.contains('notification-close')) {\n          options.onClick!();\n        }\n      });\n    }\n\n    if (options.persistent) {\n      const closeBtn = notification.querySelector('.notification-close');\n      if (closeBtn) {\n        closeBtn.addEventListener('click', () => this.hide(id));\n      }\n    }\n\n    return notification;\n  }\n\n  private getBackgroundColor(type: NotificationType): string {\n    const colors = {\n      success: '#4caf50',\n      error: '#f44336',\n      warning: '#ff9800',\n      info: '#2196f3'\n    };\n    return colors[type];\n  }\n\n  hide(id: string): void {\n    const notification = this.notifications.get(id);\n    if (!notification) return;\n\n    notification.classList.remove('notification-show');\n    notification.style.opacity = '0';\n    notification.style.transform = 'translateY(-20px)';\n\n    setTimeout(() => {\n      notification.remove();\n      this.notifications.delete(id);\n    }, 300);\n  }\n\n  hideAll(): void {\n    this.notifications.forEach((_, id) => this.hide(id));\n  }\n\n  success(message: string, options?: NotificationOptions): string {\n    return this.show(message, 'success', options);\n  }\n\n  error(message: string, options?: NotificationOptions): string {\n    return this.show(message, 'error', options);\n  }\n\n  warning(message: string, options?: NotificationOptions): string {\n    return this.show(message, 'warning', options);\n  }\n\n  info(message: string, options?: NotificationOptions): string {\n    return this.show(message, 'info', options);\n  }\n}\n\nexport const defaultNotification = new NotificationManager();"]}